### Identifying a Need

**Problem/Need:**
A Tower Defense game addresses the need for strategic thinking and decision-making under pressure. The core problem is how players can effectively defend a base or territory from waves of enemies using limited resources to strategically place towers. The need being fulfilled is entertainment combined with cognitive skill development, as players must balance resource management, planning, and quick reactions. This type of game can also act as a casual introduction to real-time strategy concepts for gamers who enjoy tactical. challenges. I believe my game can achieve all stated above 

### Requirements Outline

#### Inputs:
- **Player Controls:**
  - Mouse input to select and place towers.
  - Keyboard shortcuts for specific actions (e.g., upgrade towers, sell towers).
  - Optional touch input for mobile platforms.
  
- **Game Actions:**
  - Deploying defenses 
  - Sending mini forces 
  
- **Enemy Waves:**
  - Internal game mechanics triggering waves of enemies.
  
- **Difficulty Settings:**
  - Player input to select difficulty at the start or adjust settings (e.g., speed of enemy waves, tower strength). (TBC)

#### Processing:
- **Tower Logic:**
  - Towers should automatically target enemies within range.
  - Calculate damage based on tower stats (e.g., attack speed, range, damage).
  
- **Enemy Pathfinding:**
  - Enemies move along predefined paths toward the player’s base.
  - Health reduction as enemies are hit by towers.
  
- **Resource Management:**
  - Track resources gained from defeating enemies.
  - Deduct resources when the player builds or upgrades towers.
  
- **Game Progression:**
  - Each new wave increases in difficulty, with stronger or more numerous enemies.
  - Level-based progression where enemy types, resources, and tower abilities evolve over time.

#### Outputs:
- **On-Screen Visuals:**
  - A 2D or 3D grid-based map with paths for enemies and spaces where towers can be placed.
  
- **Enemy Units:**
  - Visual representation of enemies moving along the path.
  
- **Tower Actions:**
  - Display towers shooting projectiles or lasers towards enemies within range.
  
- **Game Stats:**
  - Real-time display of resources, tower stats, wave progression, and score.
  
- **Win/Loss Conditions:**
  - A visual/audio alert when enemies reach the base (lose health) or all waves are defeated (victory).

**TRANSMISSION**
   - All data will be recorded in the game, like high scores
  
#### Storage:
- **Game Progress:**
  - Save game levels, scores, unlocked towers, and progress for future sessions.
  
- **Player Preferences:**
  - Store settings for difficulty, sound, and graphics options.
  
- **Leaderboard Data (Optional):**
  - High scores or competitive ranking data stored locally or on a server if the game includes online features.

### Functional and Non-Functional Requirements

#### Functional Requirements:

1. **User Interaction**
   - All users will interact with keyboard in the game 
   
2. **Attack and Defense:**
   - Towers must automatically attack enemies within range, and enemies lose health upon being hit.
   
3. **Resource System:**
   - The game should grant resources when enemies are defeated and deduct resources when towers are built or upgraded.
   
4. **Wave System:**
   - The game should spawn waves of enemies at set intervals, with each wave becoming progressively more difficult.
   
5. **Victory/Defeat Conditions:**
   - The game should recognize when all enemies have been defeated (victory) or when the base’s health reaches zero (defeat).

#### Non-Functional Requirements:
1. **Performance:**
   - The game should run smoothly, even with multiple enemies and towers on screen, maintaining a stable frame rate.
   
2. **User Interface:**
   - The UI should be clear and easy to understand, with obvious indicators for resources, wave progress, and tower stats.
   
3. **Accessibility:**
   - The game should offer difficulty settings to accommodate different player skill levels, and possibly an assist mode for beginners.
   
4. **Scalability:**
   - The game should be able to scale in difficulty as the player progresses, providing a constant challenge without becoming too difficult too quickly.
   
5. **Responsiveness:**
   - Player input for actions like tower placement, upgrades, or selling should be immediately reflected in the game.
   
6. **Graphics and Audio:**
   - The visuals should be engaging without being overly complex, and sound effects should be used sparingly to enhance gameplay without overwhelming the player.

### Social and Ethical Issues

#### Social Issues:
**EQUITY** - Equity ensures balanced treatment based on each person's needs or rights and is defined as justice and fairness. In financial or legal situations, it can refers to ownership or value possessed.

**ACCESSIBILTY** - The way of accessing something, whether it be easy or hard 

### Accessibility
Make sure the game has features like alternative controls (such as touch input or programmable keys), subtitles for any audio, and visual changes like contrast settings and colorblind modes.

### Privacy and Data Protection
Make sure that whatever data the game gathers—like high scores—is encrypted, stored safely, and only gathered with the player's permission.

### Fairness and Representation
When designing characters and enemies, steer clear of clichés. By designing inclusive, non-biased game elements, you can guarantee diversity.

### Mental and Emotional Well-Being
Make the game enjoyable and upbeat. To lessen stress, steer clear of upsetting or violent stuff and provide solutions for difficulty.

### Cultural Sensitivities
To prevent any offense or cultural misunderstanding, use neutral, abstract surroundings and symbols.


#### Ethical Issues:

1. **Violence Representation:**
   - Although the game involves combat (towers attacking enemies), the violence should be abstract or cartoonish, keeping the game accessible to all ages and avoiding excessive gore or realism.

2. **Intellectual Property:**
   - Ensure that all assets used, whether visual or audio, are properly licensed or original to avoid copyright infringement.

In conclusion, a Tower Defense game offers a dynamic way to engage players in strategic thinking and decision-making, while addressing the need for both casual entertainment and intellectual challenge. By meeting these functional and non-functional requirements and considering social and ethical impacts, the game can provide a satisfying and thoughtful experience.




|   Existing Idea                            |    ![Alt text](https://shared.cloudflare.steamstatic.com/store_item_assets/steam/apps/960090/ss_cc8f0bb7f660dca501806b1853e62664bd26e30b.1920x1080.jpg?t=1723603688)  
**BLOONS TD 6**

**Plus**   | *This game has incorporated a lot of deep and engaging gameplay which makes you think very strategically which is really good. Another plus of this game is that is a very vibrant game which really good style and animation*   

**Minus** |  *This game though is a really good game, it still has minuses. When new players join the game it is quite easy but the difficulty curve can spike dramatically on higher levels which makes it difficult for newbies*

**Implication**  | *Looking at this game, it has inspired me to make something very similiar, I will try to make the 2 towers situated far away from eachother for easier and slower thinking*
  



# FLOW CHART AND PSEUDOCODE

# USER INTERACTION
![Alt text](https://lh7-rt.googleusercontent.com/docsz/AD_4nXcrrS9Twv0Ogm7b08FW_VGNiu3HiIpfMybwf_i_bRFxyk_6W152d5vahxGnJlf5ajBcz5RFpUQv3zqZnl8zuJni8uzgfTslCgQp8j0d-CoDw7tt0T07VFxH0PK1mXkuu_jbbtfEOECo_40-xVCHILFUHNk?key=d5MU--xTJcPcSlFY9KKlnL_r)

# ATTACK AND DEFENCE
![](https://lh7-rt.googleusercontent.com/docsz/AD_4nXcj52qLzdnlZZDOWVTXRZMp4-j2x07QnyzlPK2_hPKuzYpXtP2u7wMy7uTDUaG3hu3kIw9g1IeFx3LiQtbzeyAn2qsQFNVUdib9zos3gEtMrU5jE6ksuvBHoce_3ZvWjD231iyLpYwUrAbBQtoD-X5gLVaE?key=d5MU--xTJcPcSlFY9KKlnL_r)

# RESOURCES 
![](https://lh7-rt.googleusercontent.com/docsz/AD_4nXe8Spsr-cancn_E5K0E6S55d2gU1em6nchwYeUy88_Axg2dLegelaRhx2eEsYqPB9dFsH1-jkJ_5H6WDBy9d5OipfT8rNfbTAKYu5OupggSK_AV4cwqrwbz5tWffoE1x4hH9G-XMb7iiuFWtuA2wRkLMpD4?key=d5MU--xTJcPcSlFY9KKlnL_r)

# WAVES
![](https://lh7-rt.googleusercontent.com/docsz/AD_4nXey10N-gWLC8sJKPxmgdBM0E6e8Hf973zbaXtCe3XT3Iqx7vrPgGceZ6IMT3TftGgdB8vMkQjf9051hR1bej3rgmrYamRZ5JWd2u4eylkbWc-EsBHilK6p5P4DoJeM2FwGayH41_4OJhUbSrt87u7ri-Rpl?key=d5MU--xTJcPcSlFY9KKlnL_r)

# VICTORY SYSTEM

![](https://lh7-rt.googleusercontent.com/docsz/AD_4nXeG-ctjqbldvrzaLkpOJEqT5Wbs9qfFWtpfHz2UWjln3FdBKJfY7hdvb6tiB4Qx5-LV4GZK-NPw9YPTDHaZAKRB7RhnP3JiAJwcr5x8Rdkrdh7g1br2mDATx26_Z3loCAQa2ft5fiAlblMyKY1f45snohEC?key=d5MU--xTJcPcSlFY9KKlnL_r)

   # PSEUDOCODE
   # USER INTERACTION

   BEGIN GAME 

      KEYBOARD INPUT userInput

         IF '1' pressed THEN

            Deploy Mini Tank

            ELSE IF '2' pressed THEN

               Fire at other base

                  ELSE IF '3' pressed THEN

                     Deflect Fire 

                  ELSE IF '4' pressed THEN

               Unlock super ability(EVERY 20 SECONDS)

            ENDIF ‘E’ pressed THEN

         END Movement

# ATTACK AND DEFENCE
      BEGIN GAME

         MOUSE INPUT userInput

            IF Left Mouse Pressed THEN

                                    Attack

               ELSE IF Right Mouse Pressed THEN
                  
               Defend
        
         END GAME

      ENDIF

# RESOURCES 
      BEGIN GAME

            USER INPUT

                IF Win against enemy THEN
               
                  Give resources and coins
                        
                           ELSE
               
                  Buy upgrades
            
               ENDIF

            IF Resources >= UpgradeCost THEN
      
         Deduct UpgradeCost from Resources
      
      ENDIF

END GAME


# WAVES
      BEGIN GAME

         COMPUTER INPUT userInput

               IF Beat Wave One THEN

                           Move to Wave 2

                              IF Beat Wave Two THEN
            
                            Move to Wave 3

                         IF Beat Wave Three THEN
             
                   SPLASH SCREEN (YOU WIN)

                       ELSE
                  SPLASH SCREEN (YOU LOSE)

                ELSE
            SPLASH SCREEN (YOU LOSE)

          ELSE
         SPLASH SCREEN (YOU LOSE)

      END GAME


# VICTORY SYSTEM

      BEGIN GAME

         COMPUTER INPUT userInput

            SET Player Health = 100

                        FIGHT ENEMIES

                     IF Player Health = 0 THEN
         
                  SPLASH SCREEN (YOU LOSE)

               ELSE IF Enemy Health = 0 THEN
         
            VICTORY
      
         SPLASH SCREEN (YOU WIN)

      END GAME



## GANTT CHART
![](https://lh7-rt.googleusercontent.com/docsz/AD_4nXf9w92xuobtCV-wlViGRT0pgUM_fFSyABDbEETbtq36flyvWnauQgLGwxygkv3wEGcmxBcofKYwu6pt7hgivHJqlACkNa49KHpjEuB-F_p6KN7Lq7EA_0escb39V5UqTUAR1f2CbQy-jksmL49PPx8fuX0h?key=d5MU--xTJcPcSlFY9KKlnL_r)